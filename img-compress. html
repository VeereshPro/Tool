<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online image compression tool. Compress JPEG, PNG, and WEBP images while maintaining quality. Reduce image file sizes instantly.">
    <meta name="keywords" content="image compression, compress images, reduce image size, image optimizer, online tool">
    <title>ImageCompressPro - Optimize Your Images Online</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: #333;
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            text-align: center;
            padding: 30px 0;
            color: white;
        }

        header h1 {
            font-size: 2.8rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        header p {
            font-size: 1.2rem;
            max-width: 600px;
            margin: 0 auto;
            opacity: 0.9;
        }

        .main-content {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }

        .compression-section {
            flex: 1;
            min-width: 300px;
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .ad-section {
            flex: 0 0 300px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 300px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .ad-placeholder {
            width: 100%;
            height: 250px;
            background: #f1f3f4;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            color: #6c757d;
            text-align: center;
            padding: 15px;
        }

        .ad-placeholder i {
            font-size: 3rem;
            margin-bottom: 15px;
            color: #9aa0a6;
        }

        .upload-container {
            border: 3px dashed #6a11cb;
            border-radius: 12px;
            padding: 40px 20px;
            text-align: center;
            margin-bottom: 25px;
            transition: all 0.3s;
            background: #f8f9fa;
        }

        .upload-container:hover {
            background: #eef2ff;
            border-color: #2575fc;
        }

        .upload-container i {
            font-size: 4rem;
            color: #6a11cb;
            margin-bottom: 15px;
        }

        .upload-container p {
            margin: 10px 0;
            color: #495057;
        }

        .btn {
            background: linear-gradient(to right, #6a11cb, #2575fc);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 50px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s;
            display: inline-block;
            margin-top: 10px;
        }

        .btn:hover {
            opacity: 0.9;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .compression-controls {
            margin: 25px 0;
        }

        .control-group {
            margin-bottom: 20px;
        }

        .control-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #343a40;
        }

        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .slider {
            flex: 1;
            -webkit-appearance: none;
            height: 8px;
            border-radius: 5px;
            background: #dee2e6;
            outline: none;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #6a11cb;
            cursor: pointer;
        }

        .slider-value {
            font-weight: 600;
            color: #6a11cb;
            min-width: 40px;
            text-align: center;
        }

        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 30px;
        }

        .image-preview {
            flex: 1;
            min-width: 250px;
            text-align: center;
        }

        .image-preview h3 {
            margin-bottom: 15px;
            color: #343a40;
        }

        .preview-img {
            max-width: 100%;
            max-height: 300px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid #dee2e6;
        }

        .file-info {
            margin-top: 15px;
            padding: 12px;
            background: #f8f9fa;
            border-radius: 8px;
            font-size: 0.9rem;
        }

        .comparison {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
            padding: 10px;
            background: #e9ecef;
            border-radius: 8px;
            font-weight: 600;
        }

        .savings {
            color: #28a745;
        }

        footer {
            text-align: center;
            padding: 20px;
            color: white;
            margin-top: 40px;
        }

        footer p {
            margin: 5px 0;
            opacity: 0.8;
        }

        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            .ad-section {
                width: 100%;
                flex: 1;
                order: -1;
                margin-bottom: 20px;
            }
            
            header h1 {
                font-size: 2.2rem;
            }
            
            .preview-container {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>ImageCompressPro</h1>
            <p>Compress your images without sacrificing quality. Fast, free, and user-friendly!</p>
        </header>

        <div class="main-content">
            <section class="compression-section">
                <div class="upload-container" id="dropZone">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <p>Drag & drop your image here</p>
                    <p>or</p>
                    <input type="file" id="fileInput" accept="image/*" hidden>
                    <button class="btn" id="browseBtn">Browse Files</button>
                    <p class="support-text">Supports: JPEG, PNG, WEBP (Max: 10MB)</p>
                </div>

                <div class="compression-controls">
                    <div class="control-group">
                        <label for="compressionLevel">Compression Level</label>
                        <div class="slider-container">
                            <input type="range" min="0" max="100" value="75" class="slider" id="compressionLevel">
                            <span class="slider-value" id="compressionValue">75%</span>
                        </div>
                    </div>

                    <div class="control-group">
                        <label for="imageQuality">Image Quality</label>
                        <div class="slider-container">
                            <input type="range" min="10" max="100" value="85" class="slider" id="imageQuality">
                            <span class="slider-value" id="qualityValue">85%</span>
                        </div>
                    </div>

                    <button class="btn" id="compressBtn" disabled>
                        <i class="fas fa-compress-alt"></i> Compress Image
                    </button>
                </div>

                <div class="preview-container">
                    <div class="image-preview">
                        <h3>Original Image</h3>
                        <img src="" class="preview-img" id="originalPreview" alt="Original image preview">
                        <div class="file-info" id="originalInfo">Size: 0 KB</div>
                    </div>

                    <div class="image-preview">
                        <h3>Compressed Image</h3>
                        <img src="" class="preview-img" id="compressedPreview" alt="Compressed image preview">
                        <div class="file-info" id="compressedInfo">Size: 0 KB</div>
                        <div class="comparison">
                            <span>Saved: </span>
                            <span class="savings" id="savings">0 KB (0%)</span>
                        </div>
                        <button class="btn" id="downloadBtn" disabled style="margin-top: 15px;">
                            <i class="fas fa-download"></i> Download Compressed Image
                        </button>
                    </div>
                </div>
            </section>

            <section class="ad-section">
                <h3>Advertisement</h3>
                <div class="ad-placeholder">
                    <i class="fas fa-ad"></i>
                    <p>Ad Space</p>
                    <p>Google AdSense Ad Unit</p>
                    <p>Ad Unit ID: <code>INSERT_AD_UNIT_ID</code></p>
                </div>
            </section>
        </div>

        <footer>
            <p>&copy; 2023 ImageCompressPro. All rights reserved.</p>
            <p>This tool is built with HTML5, CSS3 and JavaScript</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elements
            const fileInput = document.getElementById('fileInput');
            const browseBtn = document.getElementById('browseBtn');
            const dropZone = document.getElementById('dropZone');
            const compressionLevel = document.getElementById('compressionLevel');
            const compressionValue = document.getElementById('compressionValue');
            const imageQuality = document.getElementById('imageQuality');
            const qualityValue = document.getElementById('qualityValue');
            const compressBtn = document.getElementById('compressBtn');
            const downloadBtn = document.getElementById('downloadBtn');
            const originalPreview = document.getElementById('originalPreview');
            const compressedPreview = document.getElementById('compressedPreview');
            const originalInfo = document.getElementById('originalInfo');
            const compressedInfo = document.getElementById('compressedInfo');
            const savings = document.getElementById('savings');

            // Variables to store file data
            let originalFile = null;
            let compressedFile = null;

            // Event Listeners
            browseBtn.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', handleFileSelect);
            compressionLevel.addEventListener('input', updateCompressionValue);
            imageQuality.addEventListener('input', updateQualityValue);
            compressBtn.addEventListener('click', compressImage);
            downloadBtn.addEventListener('click', downloadImage);

            // Drag and drop functionality
            dropZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropZone.style.background = '#e6eeff';
                dropZone.style.borderColor = '#2575fc';
            });

            dropZone.addEventListener('dragleave', () => {
                dropZone.style.background = '#f8f9fa';
                dropZone.style.borderColor = '#6a11cb';
            });

            dropZone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropZone.style.background = '#f8f9fa';
                dropZone.style.borderColor = '#6a11cb';
                
                if (e.dataTransfer.files.length) {
                    handleFile(e.dataTransfer.files[0]);
                }
            });

            // Functions
            function updateCompressionValue() {
                compressionValue.textContent = `${compressionLevel.value}%`;
            }

            function updateQualityValue() {
                qualityValue.textContent = `${imageQuality.value}%`;
            }

            function handleFileSelect(e) {
                if (e.target.files.length) {
                    handleFile(e.target.files[0]);
                }
            }

            function handleFile(file) {
                if (!file.type.match('image.*')) {
                    alert('Please select an image file (JPEG, PNG, WEBP)');
                    return;
                }

                if (file.size > 10 * 1024 * 1024) {
                    alert('File size exceeds 10MB limit. Please choose a smaller image.');
                    return;
                }

                originalFile = file;
                const reader = new FileReader();

                reader.onload = function(e) {
                    originalPreview.src = e.target.result;
                    originalInfo.textContent = `Size: ${formatFileSize(file.size)}`;
                    compressBtn.disabled = false;
                    
                    // Reset compressed image
                    compressedPreview.src = '';
                    compressedInfo.textContent = 'Size: 0 KB';
                    savings.textContent = '0 KB (0%)';
                    downloadBtn.disabled = true;
                };

                reader.readAsDataURL(file);
            }

            function compressImage() {
                if (!originalFile) return;

                const compression = compressionLevel.value / 100;
                const quality = imageQuality.value / 100;
                
                // In a real application, you would use a library like canvas compression
                // or send to a server for processing. This is a simulation.
                
                // Simulate compression process with a delay
                compressBtn.disabled = true;
                compressBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Compressing...';
                
                setTimeout(() => {
                    // Calculate simulated compressed size (30-80% of original)
                    const originalSize = originalFile.size;
                    const compressionFactor = 0.3 + (0.5 * (1 - compression));
                    const compressedSize = Math.round(originalSize * compressionFactor);
                    
                    // Update UI with simulated results
                    compressedPreview.src = originalPreview.src;
                    compressedInfo.textContent = `Size: ${formatFileSize(compressedSize)}`;
                    
                    const saved = originalSize - compressedSize;
                    const savedPercent = (saved / originalSize * 100).toFixed(1);
                    savings.textContent = `${formatFileSize(saved)} (${savedPercent}%)`;
                    
                    // Enable download button
                    downloadBtn.disabled = false;
                    
                    // Reset compress button
                    compressBtn.disabled = false;
                    compressBtn.innerHTML = '<i class="fas fa-compress-alt"></i> Compress Image';
                    
                    // Store compressed file info (in a real app, this would be the actual compressed file)
                    compressedFile = {
                        data: originalPreview.src,
                        size: compressedSize,
                        type: originalFile.type
                    };
                }, 1500);
            }

            function downloadImage() {
                if (!compressedFile) return;
                
                // In a real application, this would create a download link for the actual compressed image
                // For this simulation, we'll create a download link for the original image
                const link = document.createElement('a');
                link.href = compressedFile.data;
                link.download = `compressed-${originalFile.name}`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }

            function formatFileSize(bytes) {
                if (bytes < 1024) {
                    return bytes + ' bytes';
                } else if (bytes < 1048576) {
                    return (bytes / 1024).toFixed(1) + ' KB';
                } else {
                    return (bytes / 1048576).toFixed(1) + ' MB';
                }
            }

            // Initialize values
            updateCompressionValue();
            updateQualityValue();
        });
    </script>
</body>
</html>
